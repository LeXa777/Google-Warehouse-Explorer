/*
 * JothControlPanel.java
 *
 * Created on Jun 8, 2009, 5:56:14 PM
 */
package org.jdesktop.wonderland.modules.jothjava.client.uijava;

import java.text.MessageFormat;
import java.util.ResourceBundle;
import java.util.logging.Logger;

/**
 *
 * @author dj
 */
public class JothControlPanel extends javax.swing.JPanel {

    private static final Logger LOGGER = Logger.getLogger(
            JothControlPanel.class.getName());
    private static final ResourceBundle BUNDLE = ResourceBundle.getBundle(
            "org/jdesktop/wonderland/modules/jothjava/client/uijava/Bundle");

    public interface ControlPanelContainer {
        // TODO: not yet used

        public void newGame();
    }
    /** The game that contains this control panel. */
    private ControlPanelContainer container;

    /** Creates new form JothControlPanel */
    public JothControlPanel() {
        initComponents();
        displayCounts(0, 0);
    }

    public void setContainer(ControlPanelContainer container) {
        this.container = container;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        turnMessage = new javax.swing.JLabel();
        whiteCountMessage = new javax.swing.JLabel();
        blackCountMessage = new javax.swing.JLabel();
        instructionMessage = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(450, 300));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/jdesktop/wonderland/modules/jothjava/client/uijava/Bundle"); // NOI18N
        turnMessage.setText(bundle.getString("Whites_Turn")); // NOI18N

        whiteCountMessage.setText(bundle.getString("White_Pieces")); // NOI18N

        blackCountMessage.setText(bundle.getString("Black_Pieces")); // NOI18N

        instructionMessage.setText(bundle.getString("JothControlPanel.instructionMessage.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(instructionMessage)
                    .add(whiteCountMessage)
                    .add(blackCountMessage)
                    .add(turnMessage))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(instructionMessage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(turnMessage)
                .add(19, 19, 19)
                .add(whiteCountMessage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(blackCountMessage)
                .addContainerGap(185, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel blackCountMessage;
    private javax.swing.JLabel instructionMessage;
    private javax.swing.JLabel turnMessage;
    private javax.swing.JLabel whiteCountMessage;
    // End of variables declaration//GEN-END:variables

    public void clearError() {
        instructionMessage.setText(BUNDLE.getString(
                "JothControlPanel.instructionMessage.text"));
    }

    public void error(String message) {
        String text = BUNDLE.getString("Error");
        text = MessageFormat.format(text, message);
        instructionMessage.setText(text);
    }

    public void displayCounts(int whiteCount, int blackCount) {
        String text = BUNDLE.getString("White_Pieces");
        text = MessageFormat.format(text, whiteCount);
        whiteCountMessage.setText(text);
        text = BUNDLE.getString("Black_Pieces");
        text = MessageFormat.format(text, blackCount);
        blackCountMessage.setText(text);
    }

    public void setTurn(String whoseTurn) {
        String text = null;
        if ("white".equals(whoseTurn)) {
            text = BUNDLE.getString("Whites_Turn");
        } else if ("black".equals(whoseTurn)) {
            text = BUNDLE.getString("Blacks_Turn");
        } else {
            LOGGER.warning("unknown player \"" + whoseTurn + '\"');
        }
        turnMessage.setText(text);
    }

    public void notifyGameOver(String msg) {
        instructionMessage.setText(msg);
        turnMessage.setText("");
    }
}
