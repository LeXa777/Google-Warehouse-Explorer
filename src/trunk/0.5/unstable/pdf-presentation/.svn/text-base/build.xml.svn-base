<?xml version="1.0" encoding="UTF-8"?>
<project name="wonderland-${module.name}-module" default="dist" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.wonderland-${module.name}-module}"/>

    <!-- import properties for this module -->
    <property file="${current.dir}/my.module.properties"/>

    
    <property name="modules.dir" location="${wonderland.dir}/modules"/>
    <property name="module.src" value="${module.plugin.src}"/>
    <property name="module.jarname" value="${module.name}"/>
    
    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>

    <pathconvert property="module-client.classpath">
        <path location="lib/PDFRenderer.jar"/>
	<path location="${current.dir}/../pdf-deployer/build/client/pdf-deployer-client.jar"/>
        <!--<path location="${current.dir}/../presentation-base/build/client/presentation-base-client.jar"/>-->
    </pathconvert>

<!--    <pathconvert property="module-server.classpath">
        <path location="${current.dir}/../presentation-base/build/server/presentation-base-server.jar"/>
    </pathconvert>
-->
    <target name="build" depends="-module-init, -module-compile-common, 
                                                -module-compile-server,
                                                -module-compile-client"/>    

    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>
        
        <module name="${module.name}" majorVersion="${module.version.major}" minorVersion="${module.version.minor}" jarfile="${module.dist.dir}/${module.jarname}.jar"
                description="${module.description}" builddir="${build.dir}">

            <!-- Depends on the presentation-base module to provide some interface bits. -->
            <requires name="pdf-deployer" version="1"/>

	    <client dir="${current.dir}/lib">
                <include name="*.jar"/>
                <clientjar name="${module.name}-client" basedir="${build.classes.dir}">
                    <include name="${module.src}/client/**"/>
                    <include name="${module.src}/common/**"/>
                    <fileset dir="${current.dir}/src/classes">
                        <include name="${module.src}/client/resources/**"/>
                    </fileset>
                </clientjar> 
	    </client>

        <!-- Using ${current.dir}/lib as suggested by jkaplan didn't work, for some reason. Suspect it has something to do with having a dash in
             my module name? Figure out later. -->
	    <server>
                <serverjar name="${module.name}-server" basedir="${build.classes.dir}">
                    <include name="${module.src}/server/**"/>
                    <include name="${module.src}/common/**"/>
                </serverjar>
            </server>
        </module>
    </target>                                  
                                           
    <target name="deploy" depends="dist, -module-deploy"/>
    <target name="clean" depends="-module-clean"/>
</project>
