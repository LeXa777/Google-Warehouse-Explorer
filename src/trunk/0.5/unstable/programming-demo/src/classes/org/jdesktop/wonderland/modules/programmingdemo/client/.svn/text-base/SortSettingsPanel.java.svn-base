/**
 * Open Wonderland
 *
 * Copyright (c) 2010, Open Wonderland Foundation, All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * The Open Wonderland Foundation designates this particular file as
 * subject to the "Classpath" exception as provided by the Open Wonderland
 * Foundation in the License file that accompanied this code.
 */

package org.jdesktop.wonderland.modules.programmingdemo.client;

import java.awt.Color;

/**
 * Setting panel for sorting demo
 * @author Jonathan Kaplan <jonathankap@gmail.com>
 */
public class SortSettingsPanel extends javax.swing.JPanel {
    private SortCell cell;

    /** Creates new form SortSettingPanel */
    public SortSettingsPanel(SortCell cell) {
        initComponents();

        this.cell = cell;

        setItemCount(cell.getItemCount());
        setColor(cell.getColor());
        setScale(cell.getScale());
        setSpacing(cell.getSpacing());
    }

    public void setItemCount(int itemCount) {
        if (itemCount < 16) {
            eightItemsRB.setSelected(true);
        } else if (itemCount < 32) {
            sixteenItemsRB.setSelected(true);
        } else {
            thirtyTwoItemsRB.setSelected(true);
        }
    }

    public void setColor(Color color) {
        if (color.equals(Color.RED)) {
            redRB.setSelected(true);
        } else if (color.equals(Color.GREEN)) {
            greenRB.setSelected(true);
        } else if (color.equals(Color.BLUE)) {
            blueRB.setSelected(true);
        }
    }

    public void setScale(float scale) {
        sizeSlider.setValue((int) (scale * 10));
    }

    public void setSpacing(float spacing) {
        spacingSlider.setValue((int) (spacing * 10));
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemCountBG = new javax.swing.ButtonGroup();
        colorBG = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        eightItemsRB = new javax.swing.JRadioButton();
        thirtyTwoItemsRB = new javax.swing.JRadioButton();
        sixteenItemsRB = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        sizeSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        spacingSlider = new javax.swing.JSlider();
        resetButton = new javax.swing.JButton();
        randomizeButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        redRB = new javax.swing.JRadioButton();
        greenRB = new javax.swing.JRadioButton();
        blueRB = new javax.swing.JRadioButton();

        jLabel1.setText("Items:");

        itemCountBG.add(eightItemsRB);
        eightItemsRB.setText("8");
        eightItemsRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightItemsRBActionPerformed(evt);
            }
        });

        itemCountBG.add(thirtyTwoItemsRB);
        thirtyTwoItemsRB.setText("32");
        thirtyTwoItemsRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thirtyTwoItemsRBActionPerformed(evt);
            }
        });

        itemCountBG.add(sixteenItemsRB);
        sixteenItemsRB.setText("16");
        sixteenItemsRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixteenItemsRBActionPerformed(evt);
            }
        });

        jLabel2.setText("Size:");

        sizeSlider.setMinimum(1);
        sizeSlider.setValue(2);
        sizeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sizeSliderStateChanged(evt);
            }
        });

        jLabel3.setText("Spacing:");

        spacingSlider.setMinimum(1);
        spacingSlider.setValue(1);
        spacingSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spacingSliderStateChanged(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        randomizeButton.setText("Randomize");
        randomizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomizeButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Color:");

        colorBG.add(redRB);
        redRB.setText("red");
        redRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redRBActionPerformed(evt);
            }
        });

        colorBG.add(greenRB);
        greenRB.setText("green");
        greenRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenRBActionPerformed(evt);
            }
        });

        colorBG.add(blueRB);
        blueRB.setText("blue");
        blueRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(27, 27, 27))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(redRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(greenRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blueRB))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eightItemsRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sixteenItemsRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(thirtyTwoItemsRB))
                            .addComponent(sizeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(spacingSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(randomizeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(eightItemsRB)
                    .addComponent(sixteenItemsRB)
                    .addComponent(thirtyTwoItemsRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redRB)
                    .addComponent(jLabel4)
                    .addComponent(greenRB)
                    .addComponent(blueRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(sizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(spacingSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(randomizeButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eightItemsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightItemsRBActionPerformed
        cell.requestItemCount(8);
    }//GEN-LAST:event_eightItemsRBActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        cell.requestReset(false);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void thirtyTwoItemsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thirtyTwoItemsRBActionPerformed
        cell.requestItemCount(32);
    }//GEN-LAST:event_thirtyTwoItemsRBActionPerformed

    private void sixteenItemsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixteenItemsRBActionPerformed
        cell.requestItemCount(16);
    }//GEN-LAST:event_sixteenItemsRBActionPerformed

    private void sizeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sizeSliderStateChanged
        if (!sizeSlider.getValueIsAdjusting()) {
            float size = .1f * sizeSlider.getValue();
            cell.requestScale(size);
        }
    }//GEN-LAST:event_sizeSliderStateChanged

    private void spacingSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spacingSliderStateChanged
        if (!spacingSlider.getValueIsAdjusting()) {
            float spacing = .1f * spacingSlider.getValue();
            cell.requestSpacing(spacing);
        }
    }//GEN-LAST:event_spacingSliderStateChanged

    private void randomizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomizeButtonActionPerformed
        cell.requestReset(true);
    }//GEN-LAST:event_randomizeButtonActionPerformed

    private void redRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redRBActionPerformed
        cell.requestColor(Color.RED);
    }//GEN-LAST:event_redRBActionPerformed

    private void greenRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenRBActionPerformed
        cell.requestColor(Color.GREEN);
    }//GEN-LAST:event_greenRBActionPerformed

    private void blueRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueRBActionPerformed
        cell.requestColor(Color.BLUE);
    }//GEN-LAST:event_blueRBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton blueRB;
    private javax.swing.ButtonGroup colorBG;
    private javax.swing.JRadioButton eightItemsRB;
    private javax.swing.JRadioButton greenRB;
    private javax.swing.ButtonGroup itemCountBG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton randomizeButton;
    private javax.swing.JRadioButton redRB;
    private javax.swing.JButton resetButton;
    private javax.swing.JRadioButton sixteenItemsRB;
    private javax.swing.JSlider sizeSlider;
    private javax.swing.JSlider spacingSlider;
    private javax.swing.JRadioButton thirtyTwoItemsRB;
    // End of variables declaration//GEN-END:variables

}
