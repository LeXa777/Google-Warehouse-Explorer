/**
 * Open Wonderland
 *
 * Copyright (c) 2010, Open Wonderland Foundation, All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * The Open Wonderland Foundation designates this particular file as
 * subject to the "Classpath" exception as provided by the Open Wonderland
 * Foundation in the License file that accompanied this code.
 */

package org.jdesktop.wonderland.modules.grouptools.client;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.ScrollPaneConstants;

/**
 *
 *
 *
 * @author Ryan Babiuch
 * @author Jordan Slott
 * @author Drew Harry
 */
public class GroupChatJPanel extends javax.swing.JPanel {

    private GroupToolsConnection groupToolsConnection = null;
    private String userName = null;
    private String group = null;
    private int unreadMessages = 0;
    private boolean selected = false;
    /** Creates new form GroupChatJPanel */
    public GroupChatJPanel() {
        initComponents();
        jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        userName = GroupToolsConnection.getInstance().getSession().getUserID().getUsername();

        messageTextField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                sendButton.doClick();
            }
        });

        sendButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String text = messageTextField.getText();
                //groupToolsConnection.sendTextMessage(text, userName, group);
                //messageTextField.setText("");
                //appendTextMessage(text, userName);
            }
        });

        setSize(300, 450);
    }

    public void appendTextMessage(String message, String userName) {
        String msg;
        if(userName != null) {
            msg = userName +"> " + message + "\n";
        }
        else {
            msg = userName +"> " + message + "\n";
        }

        messageTextArea.append(msg);
        //messageTextArea.setCaretPosition(messageTextArea.getText().length());
        if(!selected) {
            unreadMessages++;
        }
    }

    public void setActive(GroupToolsConnection connection, String userName,
            String group) {
        this.groupToolsConnection = connection;
        this.userName = userName;
        this.group = group;
        messageTextField.setEnabled(true);
        sendButton.setEnabled(true);
    }

    public void deactivate() {
        messageTextField.setEnabled(false);
        sendButton.setEnabled(false);
    }

    public void reactivate() {
        messageTextField.setEnabled(true);
        sendButton.setEnabled(true);
    }

    public String getTitle() {
        String messages = "";
        if(unreadMessages > 0) {
            messages = " (" + unreadMessages + ")";
        }

        if(group == null) {
            return "";
        }

        return group + " " + messages;
    }

    /**
     * worthless for now.
     *
     * @return
     */
    public Icon getIcon() {
        if(unreadMessages > 0 ) return null;
        else return null;
    }

    void setSelected(boolean selected) {
        if(!this.selected && selected) {
            this.unreadMessages = 0;
        }

        this.selected = selected;
    }

    public void setGroup(String group) {
        this.group = group;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        messageTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(360, 135));

        jPanel1.setPreferredSize(new java.awt.Dimension(360, 30));

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(messageTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sendButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(messageTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(sendButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        messageTextArea.setColumns(20);
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(5);
        messageTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(messageTextArea);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .add(20, 20, 20))
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        if(group == null) {
            System.out.println("Could not send message, group is null");
            return;
        }
        
        GroupToolsConnection.getInstance().sendChatMessage(group,
                messageTextField.getText());

        System.out.println("* CHAT PANEL * SENDING CHAT MESSAGE TO: " + group
                + "\nMESSAGE: "
                + messageTextField.getText());
        messageTextField.setText("");
        
    }//GEN-LAST:event_sendButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables

}
