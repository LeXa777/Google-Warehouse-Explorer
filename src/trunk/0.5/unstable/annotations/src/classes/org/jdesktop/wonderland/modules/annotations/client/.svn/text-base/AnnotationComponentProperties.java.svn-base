/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AnnotationComponentProperties.java
 *
 * Created on Jul 16, 2009, 4:05:14 PM
 */

package org.jdesktop.wonderland.modules.annotations.client;

import java.util.logging.Logger;
import javax.swing.JPanel;
import org.jdesktop.wonderland.client.cell.properties.CellPropertiesEditor;
import org.jdesktop.wonderland.client.cell.properties.annotation.PropertiesFactory;
import org.jdesktop.wonderland.client.cell.properties.spi.PropertiesFactorySPI;
import org.jdesktop.wonderland.modules.annotations.common.AnnotationComponentServerState;

/**
 *
 * @author Matt
 */
@PropertiesFactory(AnnotationComponentServerState.class)
public class AnnotationComponentProperties extends JPanel implements PropertiesFactorySPI {
  private CellPropertiesEditor editor = null;
  private static Logger logger = Logger.getLogger(AnnotationComponentProperties.class.getName());

    /** Creates new form AnnotationComponentProperties */
    public AnnotationComponentProperties() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  public String getDisplayName() {
    return "Annotations Component";
  }

  public void setCellPropertiesEditor(CellPropertiesEditor editor) {
    this.editor = editor;
  }

  public JPanel getPropertiesJPanel() {
    return this;
  }

  public void open() {
    logger.info("[anno compo properties] open!");
  }

  public void close() {
    logger.info("[anno compo properties] close!");
  }

/**
   * @inheritDoc()
   */
  public void restore() {
    logger.info("[anno compo properties] restore cell server state!");
  }

  /**
   * @inheritDoc()
   */
  public void apply() {
    logger.info("[anno compo properties] apply!");
    // Figure out whether there already exists a server state for the
    // component.
  }


  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables

}
