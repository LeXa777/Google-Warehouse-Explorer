<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="dist" name="red5-server-module">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.red5-server-module}"/>

    <!-- import properties from the common modules properties. These values
         may overwrite some values in my.module.properties, such as the
         location of the Wonderland directory in the case of the entire modules
         directory being checked out instead of an individual file -->
    <property file="${current.dir}/../modules-unstable.properties"/>

    <!-- import properties for this module -->
    <property file="${current.dir}/my.module.properties"/>

    <property name="modules.dir" location="${wonderland.dir}/modules"/>
    <property name="module.src" value="${module.plugin.src}"/>
    <property name="module.jarname" value="${module.name}"/>

    <!-- RED5 installation directory -->
    <property name="red5.dir" value="/Users/jkaplan/misc/red5-latest/red5"/>
    <property name="red5.example.dir" location="${red5.dir}/../red5-example"/>

    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>

    <pathconvert property="module-weblib.classpath">
        <path location="${web.dir}/asset/dist/wonderland-asset-core.jar"/>
        <path location="${web.dir}/modules/dist/wonderland-modules-core.jar"/>
        <path location="${web.dir}/runner/dist/wonderland-runner-api.jar"/>
        <path location="${web.dir}/utils/dist/wonderland-web-utils.jar"/>
        <path location="${core.dir}/build/lib/wonderland-common.jar"/>
    </pathconvert>

    <target name="build" depends="-module-init, -module-compile-common,
                                                -module-compile-client,
                                                -module-compile-server,
                                                -red5-compile-weblib,
                                                -red5-package-server"/>

    <target name="-red5-compile-weblib" depends="-module-init, -module-compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${module.src}/weblib/**"/>
            </compile-classes>

            <compile-classpath>
                <pathelement path="${module-weblib.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>

    <target name="-red5-package-server">
        <fail message="Red5 not found. Please set red5.dir to the path to red5.">
            <condition>
                <not>
                    <available file="${red5.dir}"/>
                </not>
            </condition>
        </fail>

        <fail message="Red5 examples not found. Please set red5.example.dir to the path to red5 examples.">
            <condition>
                <not>
                    <available file="${red5.example.dir}"/>
                </not>
            </condition>
        </fail>

        <mkdir dir="${build.dir}/red5"/>
        <zip file="${build.dir}/red5/red5-dist.zip">
            <fileset dir="${red5.dir}/dist">
                <exclude name="log/**"/>
                <exclude name="work/**"/>
            </fileset>
            <zipfileset src="${red5.example.dir}/oflaDemo/dist/oflaDemo.war" prefix="webapps/oflaDemo"/>
            <fileset dir="${current.dir}/runner"/>
        </zip>
    </target>

    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>

        <module name="${module.name}" version="1" minorversion="1"
                moduleDescription="${module.description}"
                jarfile="${module.dist.dir}/${module.name}.jar"
                builddir="${build.lib.dir}">

            <part name="weblib">
                <jar name="${module.name}-weblib" basedir="${build.classes.dir}">
                    <include name="${module.src}/weblib/**"/>
                    <include name="${module.src}/common/**"/>
                </jar>
            </part>

            <part name="runner" dir="${build.dir}/red5">
                <include name="red5-dist.zip"/>
            </part>
        </module>
    </target>

    <target name="deploy" depends="dist, -module-deploy"/>
    <target name="clean" depends="-module-clean"/>
</project>