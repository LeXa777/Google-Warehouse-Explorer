<?xml version="1.0" encoding="UTF-8"?>
<project name="wonderland-${module.name}-module" default="dist" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.wonderland-${module.name}-module}"/>

    <!-- import properties for this module -->
    <property file="${current.dir}/my.module.properties"/>

    
    <property name="modules.dir" location="${wonderland.dir}/modules"/>
    <property name="web.dir" location="${modules.dir}/../web"/>
        
    <property name="module.src" value="${module.plugin.src}"/>
    <property name="module.jarname" value="${module.name}"/>

    <pathconvert property="module-server.classpath">
        <path location="${modules.dir}/tools/audio-manager/lib/voicelib.jar"/>
    </pathconvert>
    
    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>

    <!-- import web build file -->
    <import file="${web.dir}/build-tools/build-scripts/web-build.xml"/>

    <pathconvert property="module-web.classpath">
        <path location="${web.dir}/wfs/dist/wonderland-wfs.jar"/>
        <!--<path location="${core.dir}/build/lib/wonderland-client.jar"/>-->
        <path location="${core.dir}/build/lib/wonderland-common.jar"/>
        <!--<path location="${web.dir}/front/dist/wonderland-webadmin-core.jar"/>-->
    </pathconvert>
       
    <target name="build" depends="-module-init, -module-compile-common, 
                                                -module-compile-server,
                                                -module-compile-client,
                                                -module-compile-web"/>

    <target name="-module-compile-web" depends="-module-init, -module-compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${module.src}/web/**"/>
            </compile-classes>

            <compile-classpath>
                <pathelement path="${web.classpath}"/>
                <pathelement path="${module-web.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>
    
    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>
        
        <module name="${module.name}" majorVersion="1" minorVersion="0" jarfile="${module.dist.dir}/${module.name}.jar"
                moduleDescription="${module.description}" builddir="${build.dir}">
                    
            <client>
                <clientjar name="${module.name}-client" basedir="${build.classes.dir}">
                    <include name="${module.src}/client/**"/>
                    <include name="${module.src}/common/**"/>
                    <fileset dir="${current.dir}/src/classes">
                        <include name="${module.src}/client/resources/**/*.png"/>
                        <include name="${module.src}/client/resources/**/*.properties"/>
                    </fileset>
                </clientjar> 
            </client>
                
            <server>
                <serverjar name="${module.name}-server" basedir="${build.classes.dir}">
                    <!--Add the service to darkstar-->
                    <service type="com.sun.sgs.service.Service"
                             provider="org.jdesktop.wonderland.modules.eventrecorder.server.EventRecordingService"/>
                    <service type="com.sun.sgs.service.Manager"
                             provider="org.jdesktop.wonderland.modules.eventrecorder.server.EventRecordingManagerImpl"/>
                    <include name="${module.src}/server/**"/>
                    <include name="${module.src}/common/**"/>
                </serverjar>
            </server>
            <part name="web">
                <jar name="${module.name}.war">
                    <zipfileset dir="${build.classes.dir}" prefix="WEB-INF/classes">
                        <include name="${module.src}/web/**"/>
                        <include name="${module.src}/server/**"/>
                    </zipfileset>

                    <fileset dir="${current.dir}/web"/>
                </jar>
            </part>
        </module>
    </target>                                  
                                           
    <target name="deploy" depends="dist, -module-deploy"/>
    <target name="clean" depends="-module-clean"/>
</project>
