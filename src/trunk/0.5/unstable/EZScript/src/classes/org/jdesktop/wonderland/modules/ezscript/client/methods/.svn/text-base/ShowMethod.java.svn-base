/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ShowMethod.java
 *
 * Created on Feb 28, 2011, 11:46:09 AM
 */

package org.jdesktop.wonderland.modules.ezscript.client.methods;

import java.util.Collection;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.wonderland.client.hud.CompassLayout.Layout;
import org.jdesktop.wonderland.client.hud.HUD;
import org.jdesktop.wonderland.client.hud.HUDComponent;
import org.jdesktop.wonderland.client.hud.HUDManagerFactory;
import org.jdesktop.wonderland.modules.ezscript.client.SPI.ScriptMethodSPI;
import org.jdesktop.wonderland.modules.ezscript.client.annotation.ScriptMethod;

/**
 *
 * @author JagWire
 */
@ScriptMethod
public class ShowMethod extends javax.swing.JPanel implements ScriptMethodSPI {

    /** Creates new form ShowMethod */
    JTable contents = null;
    public ShowMethod() {
        initComponents();
        //JTable contentsTable = new JTable();
        //jScrollPane1.setViewportView(contentsTable);
        //contentsTable.setFillsViewportHeight(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public String getFunctionName() {
        return "Show";
    }

    public void setArguments(Object[] args) {
        if(args.length < 1) {
            throw new UnsupportedOperationException("Need at least 1 argument.");
        }

        if(args[0] instanceof Collection) {
            Collection c = (Collection)args[0];
             contents = new JTable();
             //contents.addColumn(new TableColumn());
            DefaultTableModel m = (DefaultTableModel)contents.getModel();
            m.addColumn("contents", c.toArray());
             jScrollPane1.setViewportView(contents);
            contents.setFillsViewportHeight(true);
        } else if(args[0] instanceof Map) {
            Map m = (Map)args[0];
            contents = new JTable(new Object[][] { m.values().toArray() },
                                        getStringsFromSet(m));
            DefaultTableModel model = (DefaultTableModel)contents.getModel();
            model.addColumn("keys", m.keySet().toArray());
            model.addColumn("values", m.values().toArray());

            jScrollPane1.setViewportView(contents);
            contents.setFillsViewportHeight(true);
        }
    }

    public String[] getStringsFromSet(Map m) {
        Set<String> ss = new HashSet<String>();
        for(Object o : m.keySet()) {
            ss.add(o.toString());
        }

        return ss.toArray(new String[1]);
    }

    public String getDescription() {
        return "Shows contents of a Collection/Map in a table.";
    }

    public String getCategory() {
        return "utilities";
    }

    public JPanel getLocalInstance() {
        return this;
    }
    public void run() {
        if(contents == null) {
            return;
        }
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                HUD mainHUD = HUDManagerFactory.getHUDManager().getHUD("main");
                HUDComponent component = mainHUD.createComponent(getLocalInstance());
                component.setPreferredLocation(Layout.CENTER);
                component.setDecoratable(true);
                mainHUD.addComponent(component);

                component.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
