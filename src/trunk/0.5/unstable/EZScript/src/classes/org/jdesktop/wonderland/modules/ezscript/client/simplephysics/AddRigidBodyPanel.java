/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddRigidBodyPanel.java
 *
 * Created on Aug 5, 2011, 9:46:49 AM
 */
package org.jdesktop.wonderland.modules.ezscript.client.simplephysics;

import javax.swing.SwingUtilities;
import org.jdesktop.wonderland.client.hud.CompassLayout.Layout;
import org.jdesktop.wonderland.client.hud.HUD;
import org.jdesktop.wonderland.client.hud.HUDComponent;
import org.jdesktop.wonderland.client.hud.HUDManagerFactory;
import org.jdesktop.wonderland.common.cell.state.BoundingVolumeHint;

/**
 *
 * @author JagWire
 */
public class AddRigidBodyPanel extends javax.swing.JPanel {

    /** Creates new form AddRigidBodyPanel */
    private HUDComponent component;
    public AddRigidBodyPanel() {
        initComponents();
                
        if(SimplePhysicsManager.INSTANCE.bodiesExist()) {
            addBoxButton.setEnabled(false);
            addSphereButton.setEnabled(false);
        } else {
            addBoxButton.setEnabled(true);
            addSphereButton.setEnabled(true);
        }
    }

    public void setHUDComponent(HUDComponent component) {
        this.component = component;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addBoxButton = new javax.swing.JButton();
        addSphereButton = new javax.swing.JButton();
        addPlaneButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        addBoxButton.setLabel("Box");
        addBoxButton.setPreferredSize(new java.awt.Dimension(64, 64));
        addBoxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBoxButtonActionPerformed(evt);
            }
        });
        add(addBoxButton, new java.awt.GridBagConstraints());

        addSphereButton.setText("Sphere");
        addSphereButton.setToolTipText("Add Sphere ");
        addSphereButton.setPreferredSize(new java.awt.Dimension(64, 64));
        addSphereButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSphereButtonActionPerformed(evt);
            }
        });
        add(addSphereButton, new java.awt.GridBagConstraints());

        addPlaneButton.setText("Plane");
        addPlaneButton.setToolTipText("Add Ground Plane");
        addPlaneButton.setPreferredSize(new java.awt.Dimension(64, 64));
        addPlaneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaneButtonActionPerformed(evt);
            }
        });
        add(addPlaneButton, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void addBoxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBoxButtonActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable() {

            public void run() {
                final BoundingVolumeHint hint = SimplePhysicsManager.INSTANCE.createBounds("BOX");

                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        HUD hud = HUDManagerFactory.getHUDManager().getHUD("main");
                        RigidBodySettingsPanel panel = new RigidBodySettingsPanel(hint);
                        HUDComponent comp = hud.createComponent(panel);
                        comp.setDecoratable(true);
                        comp.setPreferredLocation(Layout.NORTH);
                        hud.addComponent(comp);
                        panel.setComponent(comp);

                        comp.setVisible(true);
                        //component.setVisible(false);
                    }
                });
            }
        }).start();
        
    }//GEN-LAST:event_addBoxButtonActionPerformed

    private void addSphereButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSphereButtonActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable() {

            public void run() {
                final BoundingVolumeHint hint = SimplePhysicsManager.INSTANCE.createBounds("SPHERE");

                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        HUD hud = HUDManagerFactory.getHUDManager().getHUD("main");
                        RigidBodySettingsPanel panel = new RigidBodySettingsPanel(hint);
                        HUDComponent comp = hud.createComponent(panel);
                        comp.setDecoratable(true);
                        comp.setPreferredLocation(Layout.NORTH);
                        hud.addComponent(comp);
                        panel.setComponent(comp);

                        comp.setVisible(true);
                        //component.setVisible(false);
                    }
                });
            }
        }).start();
        
    }//GEN-LAST:event_addSphereButtonActionPerformed

    private void addPlaneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaneButtonActionPerformed
        // TODO add your handling code here:
        
        addBoxButton.setEnabled(true);
        addSphereButton.setEnabled(true);
        new Thread(new Runnable() {

            public void run() {
                final BoundingVolumeHint hint = SimplePhysicsManager.INSTANCE.createBounds("PLANE");

                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        HUD hud = HUDManagerFactory.getHUDManager().getHUD("main");
                        RigidBodySettingsPanel panel = new RigidBodySettingsPanel(hint);
                        HUDComponent comp = hud.createComponent(panel);
                        comp.setDecoratable(true);
                        comp.setPreferredLocation(Layout.NORTH);
                        hud.addComponent(comp);
                        panel.setComponent(comp);

                        comp.setVisible(true);
                       // component.setVisible(false);
                    }
                });
            }
        }).start();
    }//GEN-LAST:event_addPlaneButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBoxButton;
    private javax.swing.JButton addPlaneButton;
    private javax.swing.JButton addSphereButton;
    // End of variables declaration//GEN-END:variables
}
