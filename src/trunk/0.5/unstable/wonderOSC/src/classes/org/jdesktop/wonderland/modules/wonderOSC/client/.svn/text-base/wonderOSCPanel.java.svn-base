/* This code was developed with funding from the project "España Virtual"
*
* The contents of this file are subject to the GNU General Public
* License, Version 2 (the "License"); you may not use this file
* except in compliance with the License. A copy of the License is
* available at http://www.opensource.org/licenses/gpl-license.php.
*
* "España Virtual es un proyecto de I+D, subvencionado por el CDTI dentro del
* programa Ingenio 2010, orientado a la definición de la arquitectura,
* protocolos y estándares del futuro Internet 3D, con un foco especial en lo
* relativo a visualización 3D, inmersión en mundos virtuales, interacción
* entre usuarios y a la introducción de aspectos semánticos, sin dejar de lado
* el estudio y maduración de las tecnologías para el procesamiento masivo y
* almacenamiento de datos geográficos.
*
* Con una duración de cuatro años, el proyecto está liderado por DEIMOS Space
* y cuenta con la participación del Centro Nacional de Información Geográfica
* (IGN/CNIG), Grid Systems, Indra Espacio, GeoVirtual, Androme Ibérica,
* GeoSpatiumLab, DNX y una decena de prestigiosos centros de investigación y
* universidades nacionales."
*/


package org.jdesktop.wonderland.modules.wonderOSC.client;


import org.jdesktop.wonderland.modules.wonderOSC.client.*;
import com.jme.math.Vector3f;
import imi.character.CharacterMotionListener;
import imi.scene.PMatrix;
import java.text.DecimalFormat;
import java.util.logging.Logger;
import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.WlAvatarCharacter;

/**
 *
 * @author Sergio Galan sgalan@inv.it.uc3m.es Universidad Carlos III de Madrid
 *
 */
public class wonderOSCPanel extends javax.swing.JPanel {

    private WlAvatarCharacter avatarCharacter;
    private DecimalFormat floatFormat = new DecimalFormat("#####.00");

    private CharacterMotionListener motionListener;

    /** Creates new form wonderOSCPanel */
    public wonderOSCPanel() {
             initComponents();

        motionListener = new CharacterMotionListener() {

                public void transformUpdate(Vector3f translation, PMatrix rotation) {
                    StringBuffer buf = new StringBuffer();
                    buf.append(floatFormat.format(translation.x));
                    buf.append(", "+floatFormat.format(translation.y));
                    buf.append(", "+floatFormat.format(translation.z));
                }
            };

        setAvatarCharactar(null);
    }

    public void setAvatarCharactar(WlAvatarCharacter avatar) {

        avatarCharacter = avatar;
        if (avatarCharacter!=null)
            avatarCharacter.getController().removeCharacterMotionListener(motionListener);

        avatarCharacter = avatar;

        boolean enabled = (avatar!=null);

        if (enabled) {
           // actionCB.removeAllItems();
            for(String anim : avatar.getAnimationNames()) {
             //   actionCB.addItem(anim);
            }
            avatarCharacter.getController().addCharacterMotionListener(motionListener);
            motionListener.transformUpdate(avatarCharacter.getController().getPosition(), null);
        }
        else {
        }



    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("Disable OSC server");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enable OSC server");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .add(91, 91, 91)
                .add(jButton1)
                .add(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(48, 48, 48)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton1)
                    .add(jButton2))
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    wonderOSC OSCconn=null;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                if (OSCconn != null){
                    OSCconn.closeForever();
                    OSCconn=null;

                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (avatarCharacter!=null){

            listenerFactory myFactory=new listenerFactory(avatarCharacter);
            OSCconn = new wonderOSC();
            
            OSCconn.addListener("/control/back", myFactory.getListener("avatarMoveBack"));
            OSCconn.addListener("/control/right", myFactory.getListener("avatarMoveRight"));
            OSCconn.addListener("/control/left", myFactory.getListener("avatarMoveLeft"));
            OSCconn.addListener("/control/forward", myFactory.getListener("avatarMoveForward"));
            OSCconn.addListener("/control/stop", myFactory.getListener("avatarStop"));
            OSCconn.addListener("/raw/xyz", myFactory.getListener("sunSpotXYZ"));
            OSCconn.start();

        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables

}
