<?xml version="1.0" encoding="UTF-8"?>
<project name="wonderland-${module.name}-module" default="dist" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.wonderland-${module.name}-module}"/>

    <!-- import properties for this module -->
    <property file="${current.dir}/my.module.properties"/>


    <property name="modules.dir" location="${wonderland.dir}/modules"/>
    <property name="web.dir" location="${modules.dir}/../web"/>

    <property name="module.src" value="${module.plugin.src}"/>
    <property name="module.jarname" value="${module.name}"/>

    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>

    <!-- import web build file -->
    <import file="${web.dir}/build-tools/build-scripts/web-build.xml"/>

    <pathconvert property="module-common.classpath">
        <!--<path location="${wonderland.dir}/modules/tools/sharedstate/build/server/sharedstate-server.jar"/>-->
        <path location="${current.dir}/../../../wonderland-modules/stable/webcamviewer/build/server/webcamviewer-server.jar"/>
    </pathconvert>

    <pathconvert property="module-server.classpath">
        <path location="${modules.dir}/foundation/appbase/build/server/appbase-server.jar"/>
        <path location="${wonderland.dir}/modules/tools/sharedstate/build/server/sharedstate-server.jar"/>
        <path location="${current.dir}/../../../wonderland-modules/stable/webcamviewer/build/server/webcamviewer-server.jar"/>
    </pathconvert>

    <pathconvert property="module-web.classpath">
        <path location="${modules.dir}/foundation/darkstar-api/build/lib/darkstar-api.jar"/>
        <path location="${web.dir}/runner/dist/wonderland-runner-api.jar"/>
        <path location="${web.dir}/front/dist/wonderland-webadmin-core.jar"/>
        <path location="${core.dir}/build/lib/wonderland-client.jar"/>
        <path location="${core.dir}/build/lib/wonderland-common.jar"/>
    </pathconvert>

    <target name="build" depends="-module-init, -module-compile-common,
                                                -module-compile-server,
                                                -module-compile-web"/>


    <target name="-module-compile-web" depends="-module-init, -module-compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${module.src}/web/**"/>
            </compile-classes>

            <compile-classpath>
                <pathelement path="${web.classpath}"/>
                <pathelement path="${module-web.classpath}"/>
                <!--<pathelement path="${core-client.classpath}"/>
                <pathelement path="${module-client.classpath}"/>-->
            </compile-classpath>
        </wl-compile>
    </target>

    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>

        <module name="${module.name}" version="0" minorversion="1"
                moduleDescription="${module.description}"
                jarfile="${module.dist.dir}/${module.name}.jar"
                builddir="${build.lib.dir}">

           <requires name="darkstar-api" version="0" minorVersion="5"/>
           <requires name="appbase" version="0" minorVersion="5"/>
           <requires name="webcamviewer" version="0" minorVersion="1"/>

            <server>
                <serverjar name="${module.name}-server" basedir="${build.classes.dir}">
                    <include name="${module.src}/server/**"/>
                    <include name="${module.src}/common/**"/>
                </serverjar>
            </server>
            <part name="web">
                <jar name="${module.name}.war">


                    <zipfileset dir="${build.classes.dir}" prefix="WEB-INF/classes">
                        <include name="${module.src}/web/**"/>
                        <include name="${module.src}/common/**"/>
                    </zipfileset>

                    <fileset dir="${current.dir}/web"/>
                    
                    

                </jar>
            </part>

            <!--art dir="${current.dir}/art"/-->
        </module>
    </target>


    <target name="deploy" depends="dist, -module-deploy"/>
    <target name="clean" depends="-module-clean"/>
</project>