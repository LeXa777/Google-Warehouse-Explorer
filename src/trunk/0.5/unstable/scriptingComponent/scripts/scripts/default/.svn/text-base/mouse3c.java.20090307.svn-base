
import java.lang.reflect.Method;
import javax.script.ScriptContext;
import javax.swing.JWindow;

/*
 * SetScriptsPanel.java
 *
 * Created on March 6, 2009, 1:59 PM
 */


/**
 *
 * @author  morris
 */
class SetScripts2 extends javax.swing.JPanel {
    
    private static ScriptContext myContext; 
    private static Class sc = null;
    private static Object myClassObject = null;
    
    public static void main(String[] args)
        {
        try
            {
// Get the ScriptingComponent reference of class that called us
            myClassObject = myContext.getAttribute("MyClass");
            sc = myClassObject.getClass();
// Do setup for setScriptName(String, int)
            }
        catch(Exception e)
            {
            System.out.println("Exception doing all the reflection stuff");
            }
        JWindow j = new JWindow();
        SetScripts2 ssp = new SetScripts2();
        j.add(ssp);
        j.pack();
        j.setVisible(true);
        }
   
    private void listMethods()
	{
	Method m[] = sc.getDeclaredMethods();
 
	for(int i = 0; i < m.length; i++)
	    System.out.println(m[i].toString());
	}
 
    private void testMethod(String message)
        {
// Do setup for testMethod(String)
        try
            {
            Class partypes[] = new Class[1];
            partypes[0] = message.getClass();
            Method meth = sc.getMethod("otherTestMethod", partypes);
            
            Object arglist[] = new Object[1];
            arglist[0] = message;
            Object retobj = meth.invoke(myClassObject, arglist);
	    System.out.println("Result = " + retobj);
            }
        catch(Exception e)
            {
            System.out.println("Exception for testMethod");
	    e.printStackTrace();
            }
        }
    
    private String getScriptName(int which)
        {
// Do setup for getScriptName(int)
        Object retobj = null;
        try
            {
            Class partypes[] = new Class[1];
            partypes[0] = Integer.TYPE;
            Method meth = sc.getMethod("getScriptName", partypes);
	    System.out.println("In getScriptName - meth = " + meth.toString());
            
            Object arglist[] = new Object[1];
            arglist[0] = new Integer(which);
            retobj = meth.invoke(myClassObject, arglist);
            }
        catch(Exception e)
            {
            System.out.println("Exception for getScriptName");
	    e.printStackTrace();
            }
        return (String)retobj;
        }
    
    private String getScriptType(int which)
        {
// Do setup for getScriptType(int)
        Object retobj = null;
        try
            {
            Class partypes[] = new Class[1];
	    System.out.println("After partypes");
            partypes[0] = Integer.TYPE;
	    System.out.println("After TYPE");
            Method meth = sc.getMethod("getScriptType", partypes);
            System.out.println("After getMethod");

            Object arglist[] = new Object[1];
	    System.out.println("After arglist");
            arglist[0] = new Integer(which);
	    System.out.println("After set arglist");
            retobj = meth.invoke(myClassObject, arglist);
	    System.out.println("After call");
            }
        catch(Exception e)
            {
            System.out.println("Exception for getScriptType");
            }
        return (String)retobj;
        }
    
    /** Creates new form SetScriptsPanel */  
    public SetScripts2() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ScriptsTable = new javax.swing.JTable();
        jButtonFetch = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();

        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        ScriptsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Mouse Left", null, null},
                {"Mouse Middle", null, null},
                {"Mouse Right", null, null},
                {"Mouse Left + Shift", null, null},
                {"Mouse Middle + Shift", null, null},
                {"Mouse Right + Shift", null, null}
            },
            new String [] {
                "Action Name", "Script Name", "Script Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScriptsTable.setName("ScriptsTable"); // NOI18N
        ScriptsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ScriptsTable);

        jButtonFetch.setText("Fetch Settings"); // NOI18N
        jButtonFetch.setName("jButtonFetch"); // NOI18N
        jButtonFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFetchActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save Settings"); // NOI18N
        jButtonSave.setName("jButtonSave"); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit"); // NOI18N
        jButtonExit.setName("jButtonExit"); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonFetch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jButtonExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButtonFetch)
                .addGap(18, 18, 18)
                .addComponent(jButtonSave)
                .addGap(18, 18, 18)
                .addComponent(jButtonExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>

    private void jButtonFetchActionPerformed(java.awt.event.ActionEvent evt) {

        ScriptsTable.setValueAt(getScriptName(0), 0, 1);
        ScriptsTable.setValueAt(getScriptName(1), 1, 1);
        ScriptsTable.setValueAt(getScriptName(2), 2, 1);
        ScriptsTable.setValueAt(getScriptName(3), 3, 1);
        
        ScriptsTable.setValueAt(getScriptType(0), 0, 2);
        ScriptsTable.setValueAt(getScriptType(1), 1, 2);
        ScriptsTable.setValueAt(getScriptType(2), 2, 2);
        ScriptsTable.setValueAt(getScriptType(3), 3, 2);
 
	testMethod("This is another test");
/*
	listMethods();
*/
}

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
}

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {
       System.exit(0);
}
    public static void setScriptContext(ScriptContext ctx)
        {
        myContext = ctx;
        System.out.println("Inside setScriptContext");
        }
    
    
    // Variables declaration - do not modify
    private javax.swing.JTable ScriptsTable;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonFetch;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration
    
}
