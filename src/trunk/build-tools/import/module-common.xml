<project basedir="." default="..." name="wonderland-modules.module-common">
    
    <property name="build.debug" value="true"/>
    
    <property location="${modules.dir}/.." name="top.dir"/>
    <property location="${basedir}/build" name="module.build.dir"/>
    <property location="${module.build.dir}/classes" name="module.classes.dir"/>
    <property location="${module.build.dir}/lib" name="module.build-lib.dir"/>
    <property location="${basedir}/dist" name="module.dist.dir"/>
    <property location="${module.dist.dir}/client" name="module.client.dir"/>
    <property location="${module.dist.dir}/server" name="module.server.dir"/>
    <property location="${basedir}/src" name="module.src.dir"/>
    <property location="${module.src.dir}/classes" name="module.javasrc.dir" />
   
    <!-- global build file -->
    <import file="build-setup.xml"/>
    
    <!-- initialization -->
    <target name="init" depends="-pre-init, -do-init, -post-init"/>
   
    <!-- override to do things before init -->
    <target name="-pre-init"/>
    
    <!-- actual initialization -->
    <target name="-do-init">
        <mkdir dir="${module.classes.dir}"/>
        <mkdir dir="${module.build-lib.dir}"/>
        <mkdir dir="${module.client.dir}"/>
        <mkdir dir="${module.server.dir}"/>
    </target>
    
    <!-- override to do things after init -->
    <target name="-post-init"/>
    
    <!-- compile -->
    <target name="compile" depends="compile-client, compile-server"/>
    
    <!-- compile the client -->
    <target name="compile-client" 
            depends="init, -pre-compile-client, -do-compile-client, -post-compile-client"/>
    
    <!-- override to do things before compiling the client -->
    <target name="-pre-compile-client"/>
    
    <!-- actual client compile -->
    <target name="-do-compile-client">
        <javac debug="${build.debug}"
               deprecation="${build.showdeprecation}" 
               destdir="${module.classes.dir}" 
               srcdir="${module.javasrc.dir}"
               nowarn="true" 
               source="1.5" 
               target="1.5">
            <classpath>
                <pathelement path="${wonderland-client.classpath}"/>
                <pathelement path="${extra-client.classpath}"/>
            </classpath>
            
            <patternset refid="module.client.classes"/>
        </javac>
    </target>
    
    <!-- override to do things after compiling the client -->
    <target name="-post-compile-client"/>
    
    <!-- compile the server -->
    <target name="compile-server"
            depends="init, -pre-compile-server, -do-compile-server, -post-compile-server"/>
    
    <!-- override to do things before compiling the server -->
    <target name="-pre-compile-server"/>
            
    <!-- actual client compile -->
    <target name="-do-compile-server"> 
        <javac debug="${build.debug}"
               deprecation="${build.showdeprecation}" 
               destdir="${module.classes.dir}" 
               srcdir="${module.javasrc.dir}"
               nowarn="true" 
               source="1.5" 
               target="1.5">
            <classpath>
                <pathelement path="${wonderland-server.classpath}"/>
                <pathelement path="${extra-server.classpath}"/>
            </classpath>
            
            <patternset refid="module.server.classes"/>
        </javac>
    </target>
    
    <!-- override to do things after server compile -->
    <target name="-post-compile-server"/>
    
    <!-- jar -->
    <target name="jar" depends="jar-client, jar-server"/>
    
    <!-- create client jar and move it to the dist directory -->
    <target name="jar-client" 
            depends="compile-client, -pre-jar-client, -do-jar-client, -post-jar-client"/>
    
    <!-- override to do things before client jar -->
    <target name="-pre-jar-client"/>
    
    <!-- actual client jar -->
    <target name="-do-jar-client">
        <jar compress="${jar.compress}" 
             jarfile="${module.build-lib.dir}/${module.client.jar}"
             basedir="${module.classes.dir}">
            
            <patternset refid="module.client.classes"/>
        </jar>
        
        <copy todir="${module.client.dir}" file="${module.build-lib.dir}/${module.client.jar}"/>
    </target>
    
    <!-- override to do things after client jar -->
    <target name="-post-jar-client"/>
    
     <!-- create server jar and move it to the dist directory -->
    <target name="jar-server" 
            depends="compile-server, -pre-jar-server, -do-jar-server, -post-jar-server"/>
    
    <!-- override to do things before server jar -->
    <target name="-pre-jar-server"/>
    
    <!-- actual server jar -->
    <target name="-do-jar-server" depends="-do-service-manifest">
        <jar compress="${jar.compress}" 
             jarfile="${module.build-lib.dir}/${module.server.jar}"
             basedir="${module.classes.dir}">
            
            <patternset refid="module.server.classes"/>
        </jar>
        
        <copy todir="${module.server.dir}" file="${module.build-lib.dir}/${module.server.jar}"/>
    </target>
    
    <!-- build the manifest for a service -->
    <target name="-do-service-manifest" if="module.cellGLOProvider">
    </target>
    
    <!-- override to do things after server jar -->
    <target name="-post-jar-server"/>
    
    <!-- clean up -->
    <target name="clean" depends="clean-all"/>
    <target name="clean-all" depends="-pre-clean, -do-clean, -post-clean"/>
    
    <!-- override to do things before clean -->
    <target name="-pre-clean"/>
    
    <!-- actual clean -->
    <target name="-do-clean">
        <delete dir="${module.build.dir}"/>
        <delete dir="${module.dist.dir}"/>
    </target>
    
    <!-- override to do things after clean -->
    <target name="-post-clean"/>
</project>
